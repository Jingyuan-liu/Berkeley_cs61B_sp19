Q: Can you think of an analogy between the process of tesselating hexagons and randomly generating a world using rooms and hallways? 
What is the hexagon and what is the tesselation on the Project 3 side?

A: The hexagons are the rooms and when you tesselating the hexagon it is the hallway.

-----
Q: If you were to start working on world generation, what kind of method would you think of writing first? 
Think back to the lab and the process used to eventually get to tesselating hexagons.

A: I will first write the function that draw a single hexagons (or room in proj3).

-----
Q: What distinguishes a hallway from a room? How are they similar?

A: A hallway connects two rooms. They are similar in the way that both are made of several tiles.

-----
Q: For tesselating hexagons, one of the hardest parts is figuring out where to place each hexagon/how to easily place hexagons on screen in an algorithmic way. 
After looking at your own implemention, consider the implementation provided near the end of the lab. 
How did your implementation differ from the given one? What lessons can be learned from it?

A: I figured out that there are 5 columns of hexagons but was stuck finding the starting position of each hexagons. I learned
that I can write a helper method that computed the right top neighbor of a given hexagon.

-----
Q: Consider an algorithm for placing rooms and hallways on your map. 
Ideally, consider many algorithms and think about what makes some easier or harder to implement. Try and bring those ideas together into a single simple algorithm which accomplishes the task. 
In general, algorithms with as few edge cases as possible are better algorithms.

A:  I will start with drawing a single room. Then randomly generate a hallway to it. And then generate new hallways and rooms beased on the existing ones recursively.
